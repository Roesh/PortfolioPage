@model PortfolioPage.Pages.ProjectTracker.DI_BasePageModel

@foreach (var item in Model.projectList)
{
    Model.currentProject = item;
    <!-- master project card row -->
    @* TODO: Implement some way to filter the projects list, perhaps using some personal preferences *@
    <div class="col-sm card border border-dark mr-3 my-3 text-dark" style="min-width: 256px;">
        <div class="row">
            <!-- High level details -->
            <div class="col">

                <!-- Row 1 - Title-->
                <div class="row">
                    <div class="col h3 mt-1 mb-1">
                        @Html.DisplayFor(modelItem => item.title)
                    </div>   
                </div>

                <!-- Row 2 - Visibility information -->    
                <div class="row">          
                    @if(item.isPublic){
                        <div class="col mb-1 text-info">
                            <svg class="bi bi-unlock" width="1em" height="1em" viewBox="0 0 20 20" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M11.655 9H4.333c-.264 0-.398.068-.471.121a.73.73 0 00-.224.296 1.626 1.626 0 00-.138.59V15c0 .342.076.531.14.635.064.106.151.18.256.237a1.122 1.122 0 00.436.127l.013.001h7.322c.264 0 .398-.068.471-.121a.73.73 0 00.224-.296 1.627 1.627 0 00.138-.59V10c0-.342-.076-.531-.14-.635a.658.658 0 00-.255-.237 1.123 1.123 0 00-.45-.128zm.012-1H4.333C2.5 8 2.5 10 2.5 10v5c0 2 1.833 2 1.833 2h7.334c1.833 0 1.833-2 1.833-2v-5c0-2-1.833-2-1.833-2zM10.5 5a3.5 3.5 0 117 0v3h-1V5a2.5 2.5 0 00-5 0v3h-1V5z" clip-rule="evenodd"></path>
                            </svg>
                            This project is visible to the public
                        </div>
                    }
                </div>

                <!-- Row 3 - Deadline information -->
                <div class="row">
                    <div class="col mb-1 text-muted">   
                        @if(item.completionDate != null){
                            <i>This project was completed on @Html.DisplayFor(model => item.completionDate)</i>
                        }
                        else
                        {
                            <i>@Html.DisplayNameFor(model => model.projectList[0].completionDeadline):&nbsp;
                            @Html.DisplayFor(model => item.completionDeadline)</i>                                              
                        }
                    </div>              
                </div>            
                
                <!-- Row 4 - Phase and status information-->
                <div class="row">
                    <div class="col-auto mr-auto border-left-0 border-top border-right border-secondary shadow rounded-right">

                        <div class="row no-gutters">
                            <!-- Phase information -->
                            <div class="col-auto text-secondary">
                                @Html.DisplayNameFor(model =>
                                model.projectList[0].currentProjectPhase):&nbsp;
                            </div>
                            <div class="col-auto text-dark">
                                @Html.DisplayFor(modelItem => item.currentProjectPhase)
                            </div>
                        </div>                                
                        <div class="row mb-1 no-gutters">
                            <!-- Status information -->
                            <div class="col-auto text-secondary">                                        
                                    @Html.DisplayNameFor(model =>
                                    model.projectList[0].currentProjectStatus):&nbsp;
                            </div>
                            @if(item.currentProjectStatus == project.projectStatus.onTrack)
                            {
                            <div class="col-auto text-success align-self-center px-1">                                        
                                <i><b>@Html.DisplayFor(modelItem => item.currentProjectStatus)</b></i>
                            </div>
                            }
                            @if(item.currentProjectStatus == project.projectStatus.behind)
                            {
                            <div class="col-auto text-warning align-self-center px-1" style="background-color: black">
                                <i><b>@Html.DisplayFor(modelItem => item.currentProjectStatus)</b></i>
                            </div>
                            }
                            @if(item.currentProjectStatus == project.projectStatus.complete)
                            {
                            <div class="col-auto text-info align-self-center px-1">
                                <i><b>@Html.DisplayFor(modelItem => item.currentProjectStatus)</b></i>
                            </div>
                            }
                        </div>
                    </div>
                </div>

            </div>
            <!-- High level actions -->
            <div class="row justify-content-end">
                <div class="col align-contents-center mr-1">                    
                    <partial name="_ProjectActionsPartial" />   
                </div>
            </div>  
        </div>
        <hr>

        <!-- Row 5 Description, actions view-->
        <div class="row text-muted">
            <div class="col">
                @{
                    var description = item.goalDescription;
                    int descriptionLength = description.Length;
                    if(descriptionLength > 50){
                        description = description.Remove(50);
                        <text>@HtmlEncoder.Encode(description) ...</text>
                    }else{
                        <text>@HtmlEncoder.Encode(description)</text>
                    }
                }
            </div>
        </div> 

        <!-- Row 6 Component Summary -->
        <div class="row mt-1 text-info">
            <div class="col no-gutters">
            @{
                int totalComponents;
                int numComponentsBehind;
                totalComponents = (from c in item.components
                                    select c).Count();
                numComponentsBehind = (from c in item.components
                                    where c.componentStatus == projectComponent.componentStatusEnum.Behind
                                    select c).Count();
                // TODO: Check if exposing project ID is a security flaw. Unlikely, but confirm
                string ComponentCreationString = "/ProjectTracker/Component/Create?parentProject=" + @item.ID.ToString();
                string ComponentDetailsString = "/ProjectTracker/Component/Details?parentProject=" + @item.ID.ToString();

                
                    //Display data // TODO: Component summary on hover*@
                    if(totalComponents == 1){
                        @totalComponents <text>&nbsp;Component.&nbsp;</text>
                    }
                    if(totalComponents > 1){
                        @totalComponents <text>&nbsp;Components.&nbsp;</text>
                    }
                    <b>
                        @if(numComponentsBehind == 1){
                            @numComponentsBehind <text>&nbsp;component behind.&nbsp;</text>
                        }
                        @if(numComponentsBehind > 1){
                            @numComponentsBehind <text>&nbsp;components behind.&nbsp;</text>
                        }
                    </b>
                <a class="border border-right-0 shadow-sm px-2 py-1 text-info"
                href="@(ComponentDetailsString)"
                style="text-decoration: none !important; width: 6rem; min-width: 6rem">
                    Details
                </a>
                <a class="border rounded-right shadow-sm px-2 py-1 text-info"
                href="@(ComponentCreationString)"
                style="text-decoration: none !important;width: 12rem; min-width: 12rem">
                    Add Component
                </a>          
            }
            </div>
        </div>

        <div class="row mt-2 text-info">
            <div class="col">
                Issues link and summary
            </div>
        </div> 
    </div>
        
}