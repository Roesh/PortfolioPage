@model PortfolioPage.Pages.ProjectTracker.DI_BasePageModel

@if(Model.displaySingleComponent){
    if(Model.currentComponent == null){
        return;
    }
    await RenderComponentCard(Model.currentComponent, Model.minCardWidth, Model.maxCardWidth);
    return; 
}

@if(Model.parentComponent != null && Model.parentComponentCardDisplayed == false){
    await RenderComponentCard(Model.parentComponent, Model.minCardWidth, Model.maxCardWidth);
    Model.parentComponentCardDisplayed = true;
    return; 
}
@foreach (projectComponent item in Model.componentList){
    await RenderComponentCard(item, Model.minCardWidth, Model.maxCardWidth);
}

@{
    async Task RenderComponentCard(projectComponent item, string cardMinWidth, string cardMaxWidth){
        Model.currentComponent = item;
        
        <!-- master project card row -->
        @* TODO: Implement some way to filter the project components list, perhaps using some personal preferences 
        May want to default sort by components that are behind or sort by completion date*@
        <div class="col-sm card border border-dark mx-2 my-3 text-dark" style="min-width: @cardMinWidth; max-width: @cardMaxWidth">
           <!-- Optional header -->            
            @if(Model.addedHeader != null && Model.addedHeader.Count > 0){
                <div class="row justify-content-center text-center border-bottom btn-dark text-white">
                    @foreach (var subitem in Model.addedHeader)
                    {
                        <div class="col h4">
                            @subitem
                        </div>
                    }
                </div>
            }
            <!-- Rows 1-4, High level details and actions -->
            <div class="row">
                <div class="col">

                    <!-- Row 1 - Title-->
                    <div class="row">
                        <div class="col h3 mt-1 mb-1">
                            <img src="~/resources/componentIcon.svg" style="width: 32px; height: 32px" alt="component icon"/>
                            @Html.DisplayFor(modelItem => item.title)
                            @{
                                string pillString = string.Empty;
                                if(item.componentStatus == projectComponent.componentStatusEnum.Complete)
                                {
                                    pillString = "badge badge-pill badge-success px-2 py-2";
                                }
                                if(item.componentStatus == projectComponent.componentStatusEnum.Behind)
                                {
                                    pillString = "badge badge-pill badge-warning px-2 py-2";
                                }
                                if(item.componentStatus == projectComponent.componentStatusEnum.OnTrack)
                                {
                                    pillString = "badge badge-pill badge-info px-2 py-2";
                                }
                                if(item.componentStatus == projectComponent.componentStatusEnum.OnHold)
                                {
                                    pillString = "badge badge-pill badge-secondary px-2 py-2";
                                }
                                <div class="@pillString">@Html.DisplayFor(m => item.componentStatus)</div>
                            }
                        </div>
                    </div>                

                    <!-- Row 3 - Deadline information -->
                    <div class="row h5">
                        <div class="col mb-1 text-muted">   
                            @if(item.completionDate != null){
                                <i>This project was completed on @Html.DisplayFor(model => item.completionDate)</i>
                            }
                            else
                            {
                                var daysLeft = (item.completionDeadline - DateTime.Now).Days;
                                <i>Due on:&nbsp;
                                @Html.DisplayFor(model => item.completionDeadline)
                                <text>&nbsp;(</text>@daysLeft
                                <text>&nbsp;days)</text></i>                                                                            
                            }
                        </div>              
                    </div>            
                    
                    <!-- Row 4 - Type and Status information-->
                    <div class="row h5">@*
                        <div class="col-auto mr-auto border-left-0 border-top border-right border-secondary shadow rounded-right">
                            <div class="row no-gutters">
                                <!-- Type information -->
                                <div class="col-auto text-secondary">
                                    @Html.DisplayNameFor(model =>
                                    model.componentList[0].componentType):&nbsp;
                                </div>
                                <div class="col-auto text-dark">
                                    @Html.DisplayFor(modelItem => item.componentType)
                                </div>
                            </div>                                
                            <div class="row mb-1 no-gutters">
                                <!-- Status information -->
                                <div class="col-auto text-secondary">                                        
                                        @Html.DisplayNameFor(model =>
                                        model.componentList[0].componentStatus):&nbsp;
                                </div>
                                @if(item.componentStatus == projectComponent.componentStatusEnum.OnTrack)
                                {
                                <div class="col-auto text-success align-self-center px-1">                                        
                                    <i><b>@Html.DisplayFor(modelItem => item.componentStatus)</b></i>
                                </div>
                                }
                                else if(item.componentStatus == projectComponent.componentStatusEnum.Behind)
                                {
                                <div class="col-auto text-warning align-self-center px-1" style="background-color: black">
                                    <i><b>@Html.DisplayFor(modelItem => item.componentStatus)</b></i>
                                </div>
                                }
                                else if(item.componentStatus == projectComponent.componentStatusEnum.Complete)
                                {
                                <div class="col-auto text-info align-self-center px-1">
                                    <i><b>@Html.DisplayFor(modelItem => item.componentStatus)</b></i>
                                </div>
                                }
                                else{
                                    <div class="col-auto align-self-center px-1">
                                        <i><b>@Html.DisplayFor(modelItem => item.componentStatus)</b></i>
                                    </div>
                                }
                            </div>
                        </div>
                        *@
                        <!-- Type information -->
                        <div class="col-auto text-secondary">
                            @Html.DisplayNameFor(model =>
                            model.componentList[0].componentType):&nbsp;
                        </div>
                        <div class="col-auto text-dark">
                            @Html.DisplayFor(modelItem => item.componentType)
                        </div>
                    </div>

                </div>
                <!-- High level actions -->
                <div class="row justify-content-end">
                    <div class="col align-contents-center mr-1">                    
                        <partial name="_ProjectComponentActionsPartial" />   
                    </div>
                </div>  
            </div>

            <!-- Row 5 Component Summary -->
            <div class="@Model.row5_ComponentSummary">
                <div class="col">
                    @{
                        int totalComponents = 0;
                        int numComponentsBehind = 0;
                        int numComponentsOnHold = 0;
                        int numComponentsComplete = 0;
                        int numNotComplete = 0;
                        int numComponentsOnTrack = 0;
                        if(item.childComponents != null){
                            var query = (from c in item.childComponents select c);
                            // TODO: Should these be cached somehow?
                            totalComponents = query.Count();
                            numComponentsBehind = query.Where(m => m.componentStatus == projectComponent.componentStatusEnum.Behind).Count();
                            numComponentsOnHold = query.Where(m => m.componentStatus == projectComponent.componentStatusEnum.OnHold).Count();
                            numComponentsComplete = query.Where(m => m.componentStatus == projectComponent.componentStatusEnum.Complete).Count();
                            numComponentsOnTrack = query.Where(m => m.componentStatus == projectComponent.componentStatusEnum.OnTrack).Count();
                            numNotComplete = totalComponents - numComponentsComplete;
                        }
                        // TODO: Check if exposing project ID is a security flaw. Unlikely, but confirm
                        string ComponentCreationString = "/ProjectTracker/Component/Create?parentProjectID=" 
                            + @item.projectID.ToString() + "&parentComponentID=" + item.ID.ToString();
                        
                        //Display data // TODO: Component summary on hover*@
                        // TODO: Link to component summary
                        <a asp-page="/ProjectTracker/Component/Details" asp-route-id="@item.ID">
                            <img src="~/resources/componentIcon.svg" style="width: 32px; height: 32px" alt="component icon"/>
                            @if(totalComponents == 0){
                                <text>No subcomponents.</text>
                            }
                            @if(totalComponents == 1){
                                <text>1 subcomponent.</text>
                            }
                            @if(totalComponents > 1){
                                @totalComponents <text> subcomponents.</text>
                            }
                            @if(numNotComplete > 0){
                                <text> @numNotComplete in progress</text>
                            }else if(totalComponents > 0){
                                <text> All complete.</text>
                            }
                        </a>   

                        <a class="badge rounded-right badge-info shadow-sm px-2 py-2 ml-2 my-2" href="@(ComponentCreationString)">
                            + Add Component
                        </a> 
                        
                        @if(numNotComplete > 0){
                            <div>                           
                                @if(numComponentsOnHold > 0){
                                    <a type="button" class="badge badge-secondary badge-pill px-2 py-1" href="#">
                                        @numComponentsOnHold On hold                                     
                                    </a>
                                }
                                @if(numComponentsOnTrack > 0){
                                    <a type="button" class="badge badge-success badge-pill text-light px-2 py-1">
                                        @numComponentsOnTrack On Track 
                                    </a>
                                }
                                @if(numComponentsBehind > 0){
                                    <a type="button" class="badge badge-warning badge-pill px-2 py-1">
                                        @numComponentsBehind Behind
                                    </a>
                                }
                            </div> 
                        }                       
                    }                                         
                </div>
            </div>

            <!-- Row 6 Issues and updates Summary -->
            <div class="@Model.row6_IssueAndUpdateSummary">
                <div class="col align-self-center">
                    <img src="~/resources/issueIcon.svg" style="width: 32px; height: 32px" alt="issue icon" />
                    <a href="">No issues</a>
                    <a class="badge badge-pill badge-info px-2 py-2 ml-2 mt-2" 
                        asp-page="/ProjectTracker/Issue/Create"
                        asp-route-ProjectID="@item.projectID"
                        asp-route-ComponentID="@item.ID">Add issue</a>   
                </div>
                <div class="col">
                    <img src="~/resources/updateIcon.svg" style="width: 32px; height: 32px" alt="update icon" />
                     @{
                        int totalUpdates = 0,noteUpdates = 0,roadBlockUpdates = 0;
                        @if(item.projectUpdates != null && !(!item.projectUpdates?.Any() ?? false)){                            
                                var query = (from u in item.projectUpdates select u);
                                totalUpdates = query.Count();
                                noteUpdates = query.Where(u => u.projectUpdateType == projectUpdate.updateType.note).Count();
                                roadBlockUpdates = query.Where(u => u.projectUpdateType == projectUpdate.updateType.roadBlock).Count();
                            }
                            <a asp-page="/ProjectTracker/Update/Details"
                                asp-route-ProjectID="@item.projectID"
                                asp-route-ComponentID="@item.ID">
                                
                                @if(totalUpdates == 0){
                                    <text>No updates.</text>
                                }
                                @if(totalUpdates == 1){
                                    <text>1 update.</text>
                                }
                                @if(totalUpdates > 1){
                                    @totalUpdates <text> updates.</text>
                                }
                            </a>
                        <a class="badge badge-pill badge-info px-2 py-2 ml-2 mt-2" 
                        asp-page="/ProjectTracker/Update/Create"
                        asp-route-ProjectID="@item.ID"
                        asp-route-ComponentID="@item.ID">
                            + Add update
                        </a>
                        @if(totalUpdates > 0){
                            <div>                           
                                @if(noteUpdates > 0){
                                    <a type="button" class="badge badge-primary badge-pill px-2 py-1" href="#">
                                        @noteUpdates Note
                                    </a>
                                }
                                @if(roadBlockUpdates > 0){
                                    <a type="button" class="badge badge-secondary badge-pill text-light px-2 py-1">
                                        @roadBlockUpdates Road block
                                    </a>
                                }
                            </div> 
                        }
                    }
                </div>
            </div> 

            <!-- Row 7 Description view-->
            <div class="row">
                <div class="col no-gutters text-center" id="descriptionCollapse">
                    @{
                        string description = item.componentDescription;
                        int descriptionLength = description.Length;
                        string dataTarget = "PRJ_CMP_ID_" + item.ID;
                        string dataTargetRef = "#" + dataTarget;

                        <span class="text-secondary">Description: </span>                        
                        if(descriptionLength > 50){
                            <text>@description.Remove(50) ...</text>
                            <button class="btn btn-muted no-gutters" type="button" data-toggle="collapse" data-target="@dataTargetRef" aria-expanded="false" aria-controls="collapseOne">
                            <i class="text-primary">(Expand)</i>
                            </button>
                        }else{
                            <span class="my-1">@description</span>
                        }

                        if(descriptionLength > 50){
                        <div id="@dataTarget" class="collapse" aria-labelledby="headingOne" data-parent="#descriptionCollapse">
                            <div class="card-body">
                                @description
                            </div>
                        </div>  
                        }
                    }
                </div>
            </div>
        </div>
    }
}
