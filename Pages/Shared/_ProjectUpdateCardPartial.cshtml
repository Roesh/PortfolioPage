@model PortfolioPage.Pages.ProjectTracker.DI_BasePageModel

@foreach (projectUpdate item in Model.updateList){
    await RenderProjectUpdateCard(item, Model.minCardWidth, Model.maxCardWidth);
}

@{
    async Task RenderProjectUpdateCard(projectUpdate item, string cardMinWidth, string cardMaxWidth){   

        Model.currentUpdate = item;
        <!-- master project card row -->
        @* TODO: Implement some way to filter the projects list, perhaps using some personal preferences *@
        <div class="col-sm card border border-dark mx-2 my-3 text-dark" style="min-width: @cardMinWidth; max-width: @cardMaxWidth">
            <!-- Optional header -->            
            @if(Model.addedHeader != null && Model.addedHeader.Count > 0){
                <div class="row justify-content-center text-center border-bottom btn-dark text-white">
                    @foreach (var subitem in Model.addedHeader)
                    {
                        <div class="col h4">
                            @subitem
                        </div>
                    }
                </div>
            }
            
            <!-- Rows 1-4, High level details and actions -->
            <div class="row">
                <div class="col">

                    <!-- Row 1 - Title-->
                    <div class="row">
                        <div class="col h3 mt-1 mb-1">
                            <img src="~/resources/updateIcon.svg" style="width: 32px; height: 32px" alt="project icon" />
                            @Html.DisplayFor(modelItem => item.updateTitle)
                            @{
                                string pillString = string.Empty;
                                if(item.projectUpdateType == projectUpdate.updateType.roadBlock)
                                {
                                    pillString = "badge badge-pill badge-secondary px-2 py-2";
                                }
                                if(item.projectUpdateType == projectUpdate.updateType.note)
                                {
                                    pillString = "badge badge-primary badge-warning px-2 py-2";
                                }
                            }
                        </div>   
                    </div>
                    
                    <!-- Row 4 - Type information-->
                    <div class="row">
                        <div class="col-auto mr-auto mt-2 px-2 border-left-0 border-top border-right border-secondary shadow rounded-right">
                            <div class="row no-gutters">
                                <div class="col-auto text-secondary">                                        
                                    @Html.DisplayNameFor(model =>
                                    model.updateList[0].projectUpdateType):&nbsp;
                                                    
                                    @if(item.projectUpdateType == projectUpdate.updateType.newSolution)
                                    {
                                    <span class="col-auto text-success align-self-center px-1">                                        
                                        <i><b>@Html.DisplayFor(modelItem => item.projectUpdateType)</b></i>
                                    </span>
                                    }
                                    @if(item.projectUpdateType == projectUpdate.updateType.roadBlock)
                                    {
                                    <span class="col-auto text-warning align-self-center px-1" style="background-color: black">
                                        <i><b>@Html.DisplayFor(modelItem => item.projectUpdateType)</b></i>
                                    </span>
                                    }
                                    @if(item.projectUpdateType == projectUpdate.updateType.note)
                                    {
                                    <span class="col-auto text-info align-self-center px-1">
                                        <i><b>@Html.DisplayFor(modelItem => item.projectUpdateType)</b></i>
                                    </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                    <!-- High level actions -->
                    <div class="row justify-content-end">
                        <div class="col align-contents-center mr-1">                    
                            <partial name="_ProjectUpdateActionsPartial" />   
                        </div>
                    </div>  
            </div>       

            <!-- Row 7 Description view-->
            <div class="row mb-2 ml-2">
                <div class="col no-gutters" id="descriptionCollapse">
                    @{
                        string description = item.updateText;
                        int descriptionLength = description.Length;
                        string dataTarget = "UPD_ID_" + item.ID;
                        string dataTargetRef = "#" + dataTarget;

                        if(descriptionLength > 250){
                            <text>@description.Remove(50) ...</text>
                            <button class="btn btn-muted no-gutters" type="button" data-toggle="collapse" data-target="@dataTargetRef" aria-expanded="false" aria-controls="collapseOne">
                            <i class="text-primary">(Expand)</i>
                            </button>
                        }else{
                            <text>@description</text>
                        }
                        if(descriptionLength > 250){
                            <div id="@dataTarget" class="collapse" aria-labelledby="headingOne" data-parent="#descriptionCollapse">
                                <div class="card-body">
                                    @description                                
                                </div>
                            </div>  
                        }
                    }
                </div>
            </div>
        </div>
    }
}